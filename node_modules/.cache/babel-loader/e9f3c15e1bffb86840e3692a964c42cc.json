{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/asmar/code/photoscope/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CloudinaryContext, Image } from \"cloudinary-react\";\nimport { fetchPhotos, openUploadWidget } from \"./util/CloudinaryService\";\n\nfunction App() {\n  _s();\n\n  const [images, setImages] = useState([]);\n\n  const beginUpload = tag => {\n    const uploadOptions = {\n      cloudName: \"asmarphotocloud\",\n      tags: [tag, 'anImage'],\n      uploadPreset: \"qqu8rkik\"\n    };\n    openUploadWidget(uploadOptions, (error, photos) => {\n      if (!error) {\n        console.log(photos);\n\n        if (photos.event === 'success') {\n          setImages([...images, photos.info.public_id]);\n        }\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchPhotos(\"image\", setImages);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CloudinaryContext, {\n    cloudName: \"asmarphotocloud\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => beginUpload(\"image\"),\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: images.map(i => /*#__PURE__*/_jsxDEV(Image, {\n          publicId: i,\n          \"fetch-format\": \"auto\",\n          quality: \"auto\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 26\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 4\n  }, this);\n}\n\n_s(App, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/asmar/code/photoscope/src/App.js"],"names":["React","useState","useEffect","CloudinaryContext","Image","fetchPhotos","openUploadWidget","App","images","setImages","beginUpload","tag","uploadOptions","cloudName","tags","uploadPreset","error","photos","console","log","event","info","public_id","map","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,iBAAT,EAA4BC,KAA5B,QAAyC,kBAAzC;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,0BAA9C;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,WAAW,GAAGC,GAAG,IAAI;AACzB,UAAMC,aAAa,GAAG;AACpBC,MAAAA,SAAS,EAAE,iBADS;AAEpBC,MAAAA,IAAI,EAAE,CAACH,GAAD,EAAM,SAAN,CAFc;AAGpBI,MAAAA,YAAY,EAAE;AAHM,KAAtB;AAKAT,IAAAA,gBAAgB,CAACM,aAAD,EAAgB,CAACI,KAAD,EAAQC,MAAR,KAAmB;AACjD,UAAI,CAACD,KAAL,EAAY;AACVE,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,YAAGA,MAAM,CAACG,KAAP,KAAiB,SAApB,EAA8B;AAC5BX,UAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYS,MAAM,CAACI,IAAP,CAAYC,SAAxB,CAAD,CAAT;AACD;AACF,OALD,MAKO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,KATe,CAAhB;AAUD,GAhBD;;AAkBAd,EAAAA,SAAS,CAAE,MAAM;AACfG,IAAAA,WAAW,CAAC,OAAD,EAAUI,SAAV,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC,QAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,iBAA7B;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,OAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEA;AAAA,kBACGF,MAAM,CAACe,GAAP,CAAWC,CAAC,iBAAI,QAAC,KAAD;AAEX,UAAA,QAAQ,EAAEA,CAFC;AAGX,0BAAa,MAHF;AAIX,UAAA,OAAO,EAAC;AAJG,WACNA,CADM;AAAA;AAAA;AAAA;AAAA,gBAAhB;AADH;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AAeD;;GAxCQjB,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { CloudinaryContext, Image } from \"cloudinary-react\";\nimport { fetchPhotos, openUploadWidget } from \"./util/CloudinaryService\";\n\nfunction App() {\n  const [images, setImages] = useState([])\n\n  const beginUpload = tag => {\n    const uploadOptions = {\n      cloudName: \"asmarphotocloud\",\n      tags: [tag, 'anImage'],\n      uploadPreset: \"qqu8rkik\"\n    };\n    openUploadWidget(uploadOptions, (error, photos) => {\n      if (!error) {\n        console.log(photos);\n        if(photos.event === 'success'){\n          setImages([...images, photos.info.public_id])\n        }\n      } else {\n        console.log(error);\n      }\n    })\n  }\n\n  useEffect( () => {\n    fetchPhotos(\"image\", setImages);\n  }, [])\n\n  return (\n   <CloudinaryContext cloudName=\"asmarphotocloud\">\n      <div className=\"App\">\n        <button onClick={() => beginUpload(\"image\")}>Upload Image</button>\n      <section>\n        {images.map(i => <Image\n              key={i}\n              publicId={i}\n              fetch-format=\"auto\"\n              quality=\"auto\"\n            />)}\n      </section>\n    </div>\n   </CloudinaryContext>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}